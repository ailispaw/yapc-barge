#!/bin/sh

set -e
test "$YAPC_DEBUG" && set -x

SUBSYS="cpu,memory,pids"

if [ $$ -ne 1 ]; then
  TRAP_CMD=

  export YAPC_CGROUP=
  YAPC_CGROUP="$(basename $0)-$$"
  cgcreate -g $SUBSYS:$YAPC_CGROUP
  TRAP_CMD="cgdelete -g $SUBSYS:$YAPC_CGROUP;$TRAP_CMD"

  trap '' INT
  trap "$TRAP_CMD" EXIT

  (trap - INT; unshare --mount --uts --ipc --pid --fork --mount-proc $0 "$@")

  exit 0
fi

test "$YAPC_CPU_QUOTA" && cgset -r cpu.cfs_quota_us=$YAPC_CPU_QUOTA $YAPC_CGROUP
test "$YAPC_MEMORY_LIMIT" && cgset -r memory.limit_in_bytes=$YAPC_MEMORY_LIMIT $YAPC_CGROUP
test "$YAPC_PIDS_MAX" && cgset -r pids.max=$YAPC_PIDS_MAX $YAPC_CGROUP
cgclassify -g $SUBSYS:$YAPC_CGROUP $$

clean_exec() {
  for i in $(env | grep ^YAPC_ | cut -f1 -d=); do
    unset "$i"
  done
  exec "$@"
}

clean_exec "$@"
