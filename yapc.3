#!/bin/sh

set -e
test "$YAPC_DEBUG" && set -x

: ${YAPC_CAPS:="cap_chown,cap_dac_override,cap_fsetid,cap_fowner,cap_mknod,cap_setgid,cap_setuid,cap_setfcap,cap_setpcap,cap_net_bind_service,cap_sys_chroot,cap_kill,cap_audit_write"}

SUBSYS="cpu,memory,pids"

if [ $$ -ne 1 ]; then
  TRAP_CMD=

  export YAPC_CGROUP=
  YAPC_CGROUP="$(basename $0)-$$"
  cgcreate -g $SUBSYS:$YAPC_CGROUP
  TRAP_CMD="cgdelete -g $SUBSYS:$YAPC_CGROUP;$TRAP_CMD"

  trap '' INT
  trap "$TRAP_CMD" EXIT

  (trap - INT; unshare --mount --uts --ipc --pid --fork --mount-proc $0 "$@")

  exit 0
fi

test "$YAPC_CPU_QUOTA" && cgset -r cpu.cfs_quota_us=$YAPC_CPU_QUOTA $YAPC_CGROUP
test "$YAPC_MEMORY_LIMIT" && cgset -r memory.limit_in_bytes=$YAPC_MEMORY_LIMIT $YAPC_CGROUP
test "$YAPC_PIDS_MAX" && cgset -r pids.max=$YAPC_PIDS_MAX $YAPC_CGROUP
cgclassify -g $SUBSYS:$YAPC_CGROUP $$

clean_exec() {
  for i in $(env | grep ^YAPC_ | cut -f1 -d=); do
    unset "$i"
  done
  exec "$@"
}

DROP_CAPS=$(
  capsh \
  --inh="$YAPC_CAPS" \
  -- \
  -c 'capsh --decode=$(printf "%#x" $(((~0x$(cat /proc/self/status | grep ^CapInh | cut -f2)) & 0x3FFFFFFFFF))) | cut -d= -f2'
)

clean_exec capsh \
  --inh="${YAPC_CAPS}+ep" \
  --drop="$DROP_CAPS" \
  -- \
  -c "$*"

